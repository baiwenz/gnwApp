package com.example.mylibrary;

import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.content.Intent;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.alibaba.android.arouter.facade.annotation.Autowired;
import com.alibaba.android.arouter.facade.annotation.Route;
import com.alibaba.android.arouter.launcher.ARouter;
import com.example.commonlibrary.ARouter.Constance;
import com.example.commonlibrary.base.BaseActivity;
import com.example.commonlibrary.bean.Message;
import com.example.mylibrary.fragment.ActivityFragment;
import com.example.mylibrary.fragment.CommunityFragment;
import com.example.mylibrary.fragment.MyFragment;
import com.example.mylibrary.fragment.OrderFragment;
import com.example.mylibrary.fragment.login.LoginFragment;
import com.example.mylibrary.fragment.login.RegisterFragment;
import com.example.mylibrary.presenter.LoginPressenter;
import com.example.mylibrary.view.ILoginView;

import java.util.ArrayList;

import butterknife.BindView;
import butterknife.OnClick;

import static com.example.commonlibrary.base.Constants.currentFragment;

@Route(path = Constance.LOGIN_ACTIVITY)
public class LoginActivity extends BaseActivity {
    private ArrayList<Fragment> fragments;
    private FragmentTransaction transaction;
    private Fragment fragment;
    private LoginFragment mLoginFragment;
    private RegisterFragment mRegisterFragment;
    @Autowired(name = "view")
    public int regs;

    private void prepareFragments() {
        fragments = new ArrayList<>();
        if (mLoginFragment == null) {
            mLoginFragment = LoginFragment.newInstance("登录");
        }
        fragments.add(mLoginFragment);

        if (mRegisterFragment ==null){
            mRegisterFragment=RegisterFragment.newInstance("注册");
        }
        fragments.add(mRegisterFragment);
    }
    public void showFragment(int position) {
        currentFragment = position;
        FragmentManager fragmentManager = getFragmentManager();
        transaction = fragmentManager.beginTransaction();
        //先隐藏其他的
        for (int i = 0; i < fragments.size(); i++) {
            fragment = fragments.get(i);
            if (i == position) {
                if (fragment.isAdded()) {
                    transaction.show(fragment);
                } else {
                    //add
                    transaction.add(R.id.fl_login, fragment);
                }
            } else {
                if (fragment.isAdded()) {
                    transaction.hide(fragment);
                }
            }
        }
        //commit
        transaction.commitAllowingStateLoss();

    }
    @Override
    protected LoginPressenter<ILoginView> createPresenter() {
        return new LoginPressenter<>();
    }

    @Override
    protected int initLayoutInflater() {
        return R.layout.activity_login;
    }

    @Override
    public void initView() {
        prepareFragments();
    }

    @Override
    public void initData() {
        switch (regs){
            case 0: showFragment(0);break;
            case 1:showFragment(1);break;
            default:showFragment(0);
        }
    }

    /*public void onViewClicked(View view) {
        //正确写法

        //不能直接用swich 而是用if else 的方式  并且id不能用R2 而是用R
        if (view.getId() == R.id.postMsg) {
            String phoneNum=mphoneNumber.getText().toString().trim();
            basePresenter.getCode(phoneNum);
        } else if (view.getId() == R.id.my_to_home) {
            //点击事件处理

        }
    }*/

   /* @Override
    public void Code(Message message) {
        String code=message.getData();
        Toast.makeText(this,"发送成功，验证码为："+code,Toast.LENGTH_SHORT).show();
    }*/
}
